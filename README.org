#+TITLE: Emacs modes for Amateur Radio

This is Emacs package intended to support [[https://df3cb.com/fle/][Fast Log Entry]] (FLE) text files, [[https://parksontheair.com][Parks on the Air]], and other activities.


* Installation

You can either clone this repository and add it your ~load-path~ or use something like /Quelpa/ or /Straight/ to add to your configuration.  The following is one example.

#+begin_src emacs-lisp
(use-package ham
  :straight (ham :type git :host github :repo "sfromm/ham-el")
  :commands (fle-mode pota))
#+end_src

* ~fle-mode~

The FLE text format is [[https://df3cb.com/fle/documentation/][documented]] online.  Users can optionally use [[https://github.com/on4kjm/FLEcli][FLEcli]] to process FLE formatted files and upload to the user's preferred destination.

This provides font-lock highlighting for FLE files and rudimentary support for navigation via [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html#Imenu][Imenu]].

** Supported features and commands

- Syntax highlighting
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Imenu.html][Imenu]] support for Date and Band sections.
- Query QRZ for information on callsign.
- Completing read support for band and mode.
- Commands and Keybindings to insert date and time in UTC.

*** Keybinding map

| Keybinding  | Command                       |
|-------------+-------------------------------|
| C-c C-f d   | fle-insert-date               |
| C-c C-f t   | fle-insert-time               |
| C-c C-f b   | fle-insert-band               |
| C-c C-f m   | fle-insert-mode               |
| C-c C-f q   | fle-qrz-query-call            |
| C-C C-f p p | fle-insert-mypota             |
| C-C C-f p n | fle-comment-pota-logfile-name |

** Workflows

This is currently intended to be a way to support logging of amateur radio contacts and generating
[[https://adif.org/][ADIF]] (Amateur Data Interchange Format) logs that can be submitted to online log-books.

- Create a new file and set the mode as *FLE*.  You can invoke =M-x fle-mode= or add file local variables and define the mode: ~-*- mode: fle; -*-~.
- Create a FLE source block in an Org buffer:
  #+begin_example
  #+begin_src fle
  #+end_src
  #+end_example
- Test the log file before generating an ADIF file with =M-x fle-flecli-load=.
- When done logging, invoke =M-x fle-flecli-gen-adif= or =M-x fle-flecli-gen-adif-pota= to generate an ADIF log.
  + If you are keeping the log in a source block in an Org buffer, be sure to use the =:tangle= header so the contents are tangled to a file.

** FLE keywords

The following is not intended to replace the [[https://df3cb.com/fle/documentation/][documentation]] maintained by DF3CB.

*** Header section
- *mycall*
- *mygrid*
- *operator*
- *qslmsg*
- *mywwff*
- *mysota*
- *mypota*
- *nickname*
*** Optional information
- QSO comments must be embedded in brackets =< >=.
- The QSO partner's name must have a preceding =@=.
- Grid locators must have a preceding =#=.
- QSL messages must be embedded in square brackets =[ ]=.
- Remarks can be embedded in curly braces ={ }=.  /Remarks are not exported to ADIF/.
- Remarks  can also be set in lines that begin with a =#=.

** FLE parser and export to ADIF

There are two functions for parsing FLE logs: ~fle-parse-fle-path~ and ~fle-parse-fle-buffer~.  The goal is to build a FLE to ADIF export so that a log can exported.

Known current limitations:

1. Both sent and received RST report need to be defined.  The official version of FLE only requires the sent to be define.
2. Does not recognize the =day+= or =day++= syntax.
3. Time syntax needs to be =HHMM=; does not recognize =MM= syntax.
4. This does not support interpolated log times for QSOs.  Time must be entered for every QSO.
5. Does not put in frequency for digital modes where there is an established operating frequency (eg. FT8, FT4).
6. Probably lots of other things

* ~pota~
Use =M-x pota= to see real-time spotting information.  Allows for filtering based on band or mode.

* Current space weather
#+begin_src restclient
GET https://kp.gfz-potsdam.de/app/json/?start=2025-01-01T00:00:00Z&end=2025-01-01T23:59:59Z&index=Kp
#
GET https://kp.gfz-potsdam.de/app/json/?start=2025-01-02T00:00:00Z&end=2025-01-02T23:59:59Z&index=Kp
#
GET https://kp.gfz-potsdam.de/app/files/Kp_ap_Ap_SN_F107_nowcast.txt
#
GET https://services.swpc.noaa.gov/json/sunspot_report.json
#
GET https://services.swpc.noaa.gov/products/noaa-planetary-k-index.json
#+end_src
* Future goals

- More fine-tuning of regular expressions.
- +Keybindings to facilitate inserting dates and times.+
- +Function to query QRZ for a call-sign+
  + What about a query that puts results in an Emacs buffer
  + What about other websites?
- +Perhaps invoke ~flecli~ from a /fle/ buffer.+

